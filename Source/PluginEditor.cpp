/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin editor.

  ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"


//==============================================================================
ChorusAudioProcessorEditor::ChorusAudioProcessorEditor(ChorusAudioProcessor& p)
	: AudioProcessorEditor(&p), processor(p)
{
	// Make sure that before the constructor has finished, you've set the
	// editor's size to whatever you need it to be.
	setSize(450, 260);

	// Delay slider
	delaySlider.setSliderStyle(Slider::LinearHorizontal);
	delaySlider.setRange(20.0, 50.0, 1.0);
	delaySlider.setTextBoxStyle(Slider::TextEntryBoxPosition::TextBoxLeft, false, 90, 20);
	delaySlider.setTextValueSuffix("Delay ");
	delaySlider.setPopupDisplayEnabled(false, this);
	delaySlider.setTextValueSuffix("ms Delay");
	delaySlider.setValue(20.0);

	addAndMakeVisible(&delaySlider);

	delaySlider.addListener(this);

	// SModulation slider
	modSlider.setSliderStyle(Slider::LinearHorizontal);
	modSlider.setRange(0.0, 5.0, 0.1);
	modSlider.setTextBoxStyle(Slider::TextEntryBoxPosition::TextBoxLeft, false, 90, 20);
	modSlider.setPopupDisplayEnabled(false, this);
	modSlider.setTextValueSuffix(" Modulation");
	modSlider.setValue(0.5);

	addAndMakeVisible(&modSlider);

	modSlider.addListener(this);

	// Depth slider
	depthSlider.setSliderStyle(Slider::LinearHorizontal);
	depthSlider.setRange(0.0, 2.0, 0.01);
	depthSlider.setTextBoxStyle(Slider::TextEntryBoxPosition::TextBoxLeft, false, 90, 20);
	depthSlider.setPopupDisplayEnabled(false, this);
	depthSlider.setTextValueSuffix(" Depth");
	depthSlider.setValue(1.0);

	addAndMakeVisible(&depthSlider);

	depthSlider.addListener(this);

	// Wet/Dry slider
	wetDrySlider.setSliderStyle(Slider::LinearHorizontal);
	wetDrySlider.setRange(0.0, 1.0, 0.01);
	wetDrySlider.setTextBoxStyle(Slider::TextEntryBoxPosition::TextBoxLeft, false, 90, 20);
	wetDrySlider.setPopupDisplayEnabled(false, this);
	wetDrySlider.setTextValueSuffix(" Dry/Wet");
	wetDrySlider.setValue(0.5);

	addAndMakeVisible(&wetDrySlider);

	wetDrySlider.addListener(this);


}

ChorusAudioProcessorEditor::~ChorusAudioProcessorEditor()
{
}

void ChorusAudioProcessorEditor::sliderValueChanged (Slider* slider)
{
	// The value from the delay is > 0 so needs /1000 to set it to milliseconds
	double milli = 1000;
	processor.delayTime = delaySlider.getValue() / milli;
	processor.modRate = modSlider.getValue();
	processor.depth = depthSlider.getValue();
	processor.wetDry = wetDrySlider.getValue();
}

//==============================================================================
void ChorusAudioProcessorEditor::paint (Graphics& g)
{
    g.fillAll (Colours::white);
    g.setColour (Colours::black);
    g.setFont (20.0f);
}

void ChorusAudioProcessorEditor::resized()
{
    // Set position of sliders
	delaySlider.setBounds(10, 10, getWidth() - 30, 60);
	modSlider.setBounds(10, 70, getWidth() - 30, 60);
	depthSlider.setBounds(10, 130, getWidth() - 30, 60);
	wetDrySlider.setBounds(10, 190, getWidth() - 30, 60);
}
